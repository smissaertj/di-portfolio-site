<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on Joeri JM Smissaert</title>
    <link>https://joerismissaert.dev/tags/security/</link>
    <description>Recent content in Security on Joeri JM Smissaert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://joerismissaert.dev/privacy-policy&#34;&gt;Privacy Policy&lt;/a&gt; &amp; &lt;a href=&#34;https://joerismissaert.dev/terms-of-service&#34;&gt;Terms of Service&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 07 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://joerismissaert.dev/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Managing a Firewall with Firewalld</title>
      <link>https://joerismissaert.dev/managing-a-firewall-with-firewalld/</link>
      <pubDate>Sat, 07 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joerismissaert.dev/managing-a-firewall-with-firewalld/</guid>
      <description>Understanding Linux Firewalling Firewalling is implemented in the Linux kernel by means of the netfilter subsystem to limit traffic coming in to a server or going out of the server. Netfilter allows kernel modules to inspect every incoming, outgoing, or forwarded packet and act upon it by either allowing it or blocking it. In essence, netfilter controls access to and from the network stack at the Linux kernel module level.</description>
    </item>
    
    <item>
      <title>Enhancing Linux Security with SELinux</title>
      <link>https://joerismissaert.dev/enhancing-linux-security-with-selinux/</link>
      <pubDate>Fri, 16 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joerismissaert.dev/enhancing-linux-security-with-selinux/</guid>
      <description>SELinux is a security enhancement module, deployed on top of Linux, which provides improved security via Role Based Access Controls (RBACs) on subjects and objects (processes and resources). Traditional Linux security used Discretionary Access Controls (DACs).
With DAC, a process can access any file, directory, device or other resource that leaves itself open to access. Using RBAC, a process only has access to resources that it is explicitely allowd to access, based on the assigned role.</description>
    </item>
    
  </channel>
</rss>
