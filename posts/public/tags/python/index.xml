<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Joeri JM Smissaert</title>
    <link>https://joerismissaert.dev/tags/python/</link>
    <description>Recent content in Python on Joeri JM Smissaert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://joerismissaert.dev/privacy-policy&#34;&gt;Privacy Policy&lt;/a&gt; &amp; &lt;a href=&#34;https://joerismissaert.dev/terms-of-service&#34;&gt;Terms of Service&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 31 Dec 2019 08:05:24 +0000</lastBuildDate><atom:link href="https://joerismissaert.dev/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Serving a Python Flask app with Gunicorn, Nginx and Systemd.</title>
      <link>https://joerismissaert.dev/serving-a-python-flask-app-with-gunicorn-nginx-and-systemd/</link>
      <pubDate>Tue, 31 Dec 2019 08:05:24 +0000</pubDate>
      
      <guid>https://joerismissaert.dev/serving-a-python-flask-app-with-gunicorn-nginx-and-systemd/</guid>
      <description>This post explains how to serve a Python app from a Virtualenv with the Gunicorn WSGI and using Nginx as a proxy server.
You should already have Nginx installed, and have a sample Flask app in a Virtualenv.
Install Gunicorn in your Virtualenv Activate your Virtualenv and install Gunicorn by typing:
$ source myprojectenv/bin/activate (myprojectenv)$ pip install gunicorn Creating the WSGI Entry Point Next, we&amp;rsquo;ll create a file called wsgi.</description>
    </item>
    
  </channel>
</rss>
