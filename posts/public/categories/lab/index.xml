<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lab on Joeri JM Smissaert</title>
    <link>https://joerismissaert.dev/categories/lab/</link>
    <description>Recent content in Lab on Joeri JM Smissaert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://joerismissaert.dev/privacy-policy&#34;&gt;Privacy Policy&lt;/a&gt; &amp; &lt;a href=&#34;https://joerismissaert.dev/terms-of-service&#34;&gt;Terms of Service&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 14 May 2020 10:28:03 +0000</lastBuildDate><atom:link href="https://joerismissaert.dev/categories/lab/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Auto Deploy Branch Changes to Kinsta using GitLab CI/CD</title>
      <link>https://joerismissaert.dev/auto-deploy-branch-changes-to-kinsta-using-gitlab-ci-cd/</link>
      <pubDate>Thu, 14 May 2020 10:28:03 +0000</pubDate>
      
      <guid>https://joerismissaert.dev/auto-deploy-branch-changes-to-kinsta-using-gitlab-ci-cd/</guid>
      <description>If you&amp;rsquo;re comfortable using the command line, you&amp;rsquo;re probably aware there are different ways you can push your Kinsta Staging site to Live without overwriting the Live database. This can be useful when you need to push code changes, and at the same time need to leave the Live database in its current state.
This post will cover how you can achieve this using GitLab CI/CD and assumes you&amp;rsquo;re familiar with version control using git, and using the Kinsta Staging environment for testing and development.</description>
    </item>
    
    <item>
      <title>Lab: Permissions In Practice</title>
      <link>https://joerismissaert.dev/lab-permissions-in-practice/</link>
      <pubDate>Sun, 10 May 2020 16:57:26 +0000</pubDate>
      
      <guid>https://joerismissaert.dev/lab-permissions-in-practice/</guid>
      <description>In the previous two posts we learned about basic and advanced permissions, Access Control Lists, umask and extended-attributes.
Let&amp;rsquo;s put this knowledge to work by setting up a shared group environment
Lab Objectives  Create 4 random users and two groups: finance &amp;amp; sales.
Add two users to the first group and two to the second group. Create 2 directories: /data/finance &amp;amp; /data/sales.
Make the group sales the group owner of the directory sales, and make the group finance the group owner of the directory finance.</description>
    </item>
    
  </channel>
</rss>
