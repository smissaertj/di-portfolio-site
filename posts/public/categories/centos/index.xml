<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CentOS on Joeri JM Smissaert</title>
    <link>https://joerismissaert.dev/categories/centos/</link>
    <description>Recent content in CentOS on Joeri JM Smissaert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://joerismissaert.dev/privacy-policy&#34;&gt;Privacy Policy&lt;/a&gt; &amp; &lt;a href=&#34;https://joerismissaert.dev/terms-of-service&#34;&gt;Terms of Service&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 21 May 2020 16:54:46 +0000</lastBuildDate><atom:link href="https://joerismissaert.dev/categories/centos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Package Management with Yum: Understanding Repo’s, Groups, Package Module Streams and RPM Queries</title>
      <link>https://joerismissaert.dev/package-management-with-yum-understanding-repos-groups-package-module-streams-and-rpm-queries/</link>
      <pubDate>Thu, 21 May 2020 16:54:46 +0000</pubDate>
      
      <guid>https://joerismissaert.dev/package-management-with-yum-understanding-repos-groups-package-module-streams-and-rpm-queries/</guid>
      <description>The Yellowdog Updater, Modified, is the default utility to manage software packages on Red Hat Enterprise Linux. On Fedora (the upstream version of RHEL) Yum has been replaced with dnf but Red Hat decided to keep the Yum name for the RHEL releases. Although you&amp;rsquo;ll be using yum, under the hood you&amp;rsquo;re in fact using dnf which is why sometimes you&amp;rsquo;ll see references to dnf or dnf resources.
The Role of Repositories Yum is designed to work with repositories which are depots of available software packages.</description>
    </item>
    
    <item>
      <title>Configuring the Network on RHEL 8 with nmcli and nmtui</title>
      <link>https://joerismissaert.dev/configuring-the-network-on-rhel-8-with-nmcli-and-nmtui/</link>
      <pubDate>Tue, 19 May 2020 08:03:28 +0000</pubDate>
      
      <guid>https://joerismissaert.dev/configuring-the-network-on-rhel-8-with-nmcli-and-nmtui/</guid>
      <description>In the previous post we learned how the check the runtime configuration of the network using the ip command. To make persistent changes to the network configuration that will survive a reboot, we need to use either nmcli or nmtui.
Networking is managed by the NetworkManager service. When the NetworkManager service comes up, it reads the network card configuration scripts that are located in /etc/sysconfig/network-scripts and that have a name which starts with ifcgf followed by the name of the network card.</description>
    </item>
    
    <item>
      <title>Validating Network Configuration on Red Hat Enterprise Linux 8</title>
      <link>https://joerismissaert.dev/validating-network-configuration-on-red-hat-enterprise-linux-8/</link>
      <pubDate>Mon, 18 May 2020 17:33:16 +0000</pubDate>
      
      <guid>https://joerismissaert.dev/validating-network-configuration-on-red-hat-enterprise-linux-8/</guid>
      <description>Networking is one of the essential items on a server. On Red Hat Enterprise Linux 8, networking is managed by the NetworkManager service. We&amp;rsquo;ll cover new tools that were introduced to help manage networks during runtime and how to make make the configuration persistent.
Validating Network Addresses and Interfaces In RHEL 8, the default names for network cards are based on firmware, device topology, and device firmware. Network card names will always consist of the following parts:</description>
    </item>
    
    <item>
      <title>Access Control Lists, umask &amp; User-Extended Attributes 101</title>
      <link>https://joerismissaert.dev/access-control-lists-umask-user-extended-attributes-101/</link>
      <pubDate>Sun, 10 May 2020 07:12:26 +0000</pubDate>
      
      <guid>https://joerismissaert.dev/access-control-lists-umask-user-extended-attributes-101/</guid>
      <description>Access Control Lists allow you to add permissions to more than one user or group on the same file or directory, and allows you to set default permissions for newly created files and directories.
Managing ACLs It&amp;rsquo;s possible you need need to add file system support for ACLs during boot time by adding the acl mount option the the /etc/fstab file. That would be the case when you&amp;rsquo;re seeing the Operation not supported message when applying an ACL.</description>
    </item>
    
    <item>
      <title>Basic &amp; Advanced Permissions 101</title>
      <link>https://joerismissaert.dev/basic-advanced-permissions-101/</link>
      <pubDate>Sat, 09 May 2020 12:23:40 +0000</pubDate>
      
      <guid>https://joerismissaert.dev/basic-advanced-permissions-101/</guid>
      <description>To get access to files on Linux, permissions are used. These permissions are assigned to three entities: the file owner, the group owner, and the others entity.
Managing File Ownership Displaying Ownership Every file and directory on Linux has two owners: a user owner and a group owner. There is also the &amp;ldquo;others&amp;rdquo; entity. The user , group and others are shown when listing permissions with the ls -l command.</description>
    </item>
    
    <item>
      <title>Automate Let’s Encrypt SSL with Certbot on Centos 8</title>
      <link>https://joerismissaert.dev/automate-lets-encrypt-ssl-with-certbot-on-centos-8/</link>
      <pubDate>Fri, 10 Jan 2020 08:30:48 +0000</pubDate>
      
      <guid>https://joerismissaert.dev/automate-lets-encrypt-ssl-with-certbot-on-centos-8/</guid>
      <description>An SSL Certificate is a text file with encrypted data that you install on your server so that you can secure/encrypt sensitive communications between your site and your visitors. They are also used to verify that you are connected with the service you wish to be connecting with, and, as a website owner it validates your trustworthiness.
SSL certificates can be expensive, so here&amp;rsquo;s where Let’s Encrypt comes into play.</description>
    </item>
    
    <item>
      <title>Installing Nginx and Setting up Server Blocks on CentOS 8</title>
      <link>https://joerismissaert.dev/installing-nginx-and-setting-up-server-blocks-on-centos-8/</link>
      <pubDate>Thu, 26 Dec 2019 08:29:00 +0000</pubDate>
      
      <guid>https://joerismissaert.dev/installing-nginx-and-setting-up-server-blocks-on-centos-8/</guid>
      <description>In this post, I&amp;rsquo;ll walk through how to install Nginx and set up Nginx server blocks on CentOS 8, and, how to serve different content to different visitors depending on which domains they are requesting.
After initially installing CentOS, check if updates are available and apply them:
$ sudo dnf update -y firewalld Next, let&amp;rsquo;s install the firewalld daemon to secure the server, start the daemon and enable it at boot.</description>
    </item>
    
    <item>
      <title>Red Hat Enterprise Linux 8 and Nvidia Optimus</title>
      <link>https://joerismissaert.dev/red-hat-enterprise-linux-8-and-nvidia-optimus/</link>
      <pubDate>Tue, 26 Nov 2019 06:37:47 +0000</pubDate>
      
      <guid>https://joerismissaert.dev/red-hat-enterprise-linux-8-and-nvidia-optimus/</guid>
      <description>Yesterday I decided to go ahead and install RHEL8 on my laptop and use it as my everyday workstation as well as a learning platform to move forward on my Red Hat certification path.
In case you&amp;rsquo;re interested, you can actually use RHEL for free with a No-Cost RHEL Developer Subscription as long as you don&amp;rsquo;t use the machine &amp;ldquo;in production&amp;rdquo;.
After a pretty straightforward installation of RHEL 8 I was immediately confronted with a first issue.</description>
    </item>
    
  </channel>
</rss>
